{"version":3,"sources":["store/fetchModes.js","components/SelectCustom.js","components/ActionsPanel.js","store/activeMode.js","store/isGameStarted.js","components/CellsGrid.js","store/hoverRecords.js","components/History.js","components/CellPicker.js","App.js","store/index.js","index.js"],"names":["initialState","pending","data","error","DropdownIndicator","props","style","borderTop","borderLeft","borderRight","SelectCustom","options","changeFunction","className","classNamePrefix","placeholder","components","onChange","value","ActionsPanel","modes","useSelector","state","activeMode","isGameStarted","dispatch","useDispatch","useState","selectOptions","setSelectOptions","useEffect","Object","keys","map","item","label","split","index","toLowerCase","toUpperCase","slice","join","type","payload","setActiveMode","disabled","onClick","CellsGrid","cellsTable","cellsGrid","handleMouseOver","e","target","matches","row","parentElement","sectionRowIndex","column","cellIndex","count","isFinite","cellsArr","rowsArr","i","push","length","onMouseOver","generateTable","field","History","recordsItems","hoverRecords","recordsContainer","CellPicker","url","fetch","then","res","json","catch","fetchModesError","App","rootReducer","combineReducers","action","lastFive","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95b91c4d.chunk.js","sourcesContent":["export function fetchModesPending() {\n    return {\n        type: \"FETCH_MODES_PENDING\"\n    }\n}\nexport function fetchModesSuccess(payload) {\n    return {\n        type: \"FETCH_MODES_SUCCESS\",\n        payload: payload\n    }\n}\nexport function fetchModesError(error) {\n    return {\n        type: \"FETCH_MODES_ERROR\",\n        error: error\n    }\n}\n\nexport function fetchModes(url) {\n    return dispatch => {\n        dispatch(fetchModesPending());\n        fetch(url)\n            .then(res => res.json())\n            .then(res => {\n                if(res.error) {\n                    throw(res.error);\n                }\n                dispatch(fetchModesSuccess(res))\n            })\n            .catch(error => {\n                dispatch(fetchModesError(error));\n            });\n    }\n}\n\nconst initialState = {\n    pending: false,\n    data: null,\n    error: null\n};\n\nexport default function fetchModesReducer(state = initialState, action) {\n    switch (action.type) {\n        case \"FETCH_MODES_PENDING\":\n            return {\n                ...state,\n                pending: true\n            };\n        case \"FETCH_MODES_SUCCESS\":\n            return {\n                ...state,\n                pending: false,\n                data: action.payload\n            };\n        case \"FETCH_MODES_ERROR\":\n            return {\n                ...state,\n                pending: false,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n}","import Select, { components } from \"react-select\";\n\nconst DropdownIndicator = (props) => {\n    return (\n        <components.DropdownIndicator {...props}>\n            <i style={{\n                borderTop: \"5px solid #000\",\n                borderLeft: \"5px solid transparent\",\n                borderRight: \"5px solid transparent\" }}\n            ></i>\n        </components.DropdownIndicator>\n    );\n};\n\nfunction SelectCustom({ options, changeFunction = () => {} }) {\n\n    function handleChange(value) {\n        changeFunction(value);\n    }\n\n    return (\n        <Select\n            className=\"select\"\n            classNamePrefix=\"select\"\n            placeholder=\"Pick mode\"\n            options={options}\n            components={{ DropdownIndicator }}\n            onChange={handleChange}\n        />\n    );\n}\n\nexport default SelectCustom;","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setActiveMode } from \"../store/activeMode.js\";\nimport { toggleGameStarted } from \"../store/isGameStarted.js\";\n// Components\nimport SelectCustom from \"./SelectCustom\";\n\nfunction ActionsPanel() {\n    const modes = useSelector(state => state.modes);\n    const activeMode = useSelector(state => state.activeMode);\n    const isGameStarted = useSelector(state => state.isGameStarted);\n    const dispatch = useDispatch();\n    const [selectOptions, setSelectOptions] = useState([]);\n\n    useEffect(() => {\n        if (modes.data) {\n            setSelectOptions(Object.keys(modes.data).map(item => {\n                return {\n                    value: item,\n                    label: item.split(/(?=[A-Z])/)\n                        .map((item, index) => index ? item.toLowerCase() : item[0].toUpperCase() + item.slice(1))\n                        .join(\" \")\n                }\n            }));\n        }\n    }, [ modes ]);\n\n    function changeActiveMode(value) {\n        dispatch(setActiveMode(value.value));\n    }\n\n    return (\n        <div className=\"actions-panel\">\n            <SelectCustom options={selectOptions} changeFunction={changeActiveMode} />\n            <button type=\"button\" className=\"button\" disabled={!activeMode} onClick={() => dispatch(toggleGameStarted())}>\n                {isGameStarted ? \"Stop\" : \"Start\"}\n            </button>\n        </div>\n    );\n}\n\nexport default ActionsPanel;","export function setActiveMode(value) {\n    return {\n        type: \"SET_ACTIVE_MODE\",\n        payload: value\n    }\n};\n\nexport default function activeModeReducer(state = \"\", action) {\n    switch (action.type) {\n        case \"SET_ACTIVE_MODE\":\n            return action.payload;\n        default:\n            return state;\n    }\n}","export function toggleGameStarted() {\n    return {\n        type: \"TOGGLE_GAME_STARTED\"\n    }\n}\n\nexport default function isGameStartedReducer(state = false, action) {\n    switch (action.type) {\n        case \"TOGGLE_GAME_STARTED\":\n            return !state;\n        default:\n            return state;\n    }\n}","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addHoverRecord } from \"../store/hoverRecords.js\";\n\nfunction CellsGrid() {\n    const modes = useSelector(state => state.modes);\n    const activeMode = useSelector(state => state.activeMode);\n    const isGameStarted = useSelector(state => state.isGameStarted);\n    const dispatch = useDispatch();\n    let cellsTable = null;\n    let cellsGrid = null;\n\n    if (activeMode) {\n        const count = +modes.data[activeMode].field;\n\n        cellsTable = generateTable(count);\n        cellsGrid = (\n            <div className={`cells-grid${isGameStarted ? \" game-started\" : \"\" }`}>\n                { cellsTable }\n            </div>\n        );\n    }\n\n    function handleMouseOver(e) {\n        if (!isGameStarted) return;\n        const target = e.target;\n        if (target.matches(\"tbody td\")) {\n            dispatch(addHoverRecord({ row: target.parentElement.sectionRowIndex + 1, column: target.cellIndex + 1 }));\n        }\n    }\n\n    function generateTable(count) {\n        if (!isFinite(count) || (count <= 0)) return null;\n\n        let cellsArr = [];\n        const rowsArr = [];\n        for (let i = 1; i <= count; i++) {\n            cellsArr.push(<td key={i} className=\"cell\"></td>);\n            if (!(i % 5) && (i > 1)) {\n                rowsArr.push(<tr key={i}>{ cellsArr }</tr>);\n                cellsArr = [];\n            }\n        }\n\n        if (!rowsArr.length || cellsArr.length) {\n            rowsArr.push(<tr key={1}>{ cellsArr }</tr>)\n        }\n\n        return (\n            <table onMouseOver={handleMouseOver}>\n                <tbody>\n                    { rowsArr }\n                </tbody>\n            </table>\n        )\n    }\n\n    return cellsGrid;\n}\n\nexport default CellsGrid;","export function addHoverRecord(coordinates) {\n    return {\n        type: \"ADD_HOVER_RECORD\",\n        payload: coordinates\n    }\n};\n\nexport default function hoverRecordsReducer(state = [], action) {\n    switch (action.type) {\n        case \"ADD_HOVER_RECORD\":\n            const lastFive = state.slice(0, 4);\n            return [action.payload, ...lastFive];\n        default:\n            return state;\n    }\n};","import { useSelector } from \"react-redux\";\n\nfunction History() {\n    const recordsItems = useSelector(state => state.hoverRecords);\n    let recordsContainer = null;\n\n    if (recordsItems.length) {\n        recordsContainer = (\n            <div className=\"records\">\n                <div className=\"records-list\">\n                    {\n                        recordsItems.map((item, index) => (\n                            <div key={index} className=\"record\">{`row ${item.row} column ${item.column}`}</div>\n                        ))\n                    }\n                </div>\n            </div>\n        );\n    } else {\n        recordsContainer = <div className=\"records\"></div>;\n    }\n\n    return (\n        <div className=\"history\">\n            <h2>History</h2>\n            { recordsContainer }\n        </div>\n    );\n}\n\nexport default History;","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchModes } from \"../store/fetchModes.js\";\n// Components \nimport ActionsPanel from \"./ActionsPanel.js\";\nimport CellsGrid from \"./CellsGrid.js\";\nimport History from \"./History.js\";\n\nfunction CellPicker() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchModes(\"https://demo1030918.mockable.io/\"));\n    }, []);\n\n    return (\n        <div className=\"cellpicker\">\n            <ActionsPanel />\n            <CellsGrid />\n            <History />\n        </div>\n    )\n}\n\nexport default CellPicker;\n\n","import './App.scss';\n// Components\nimport CellPicker from \"./components/CellPicker\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <CellPicker/>\n        </div>\n    );\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport fetchModesReducer from \"./fetchModes.js\";\nimport activeModeReducer from \"./activeMode.js\";\nimport isGameStartedReducer from \"./isGameStarted.js\";\nimport hoverRecordsReducer from \"./hoverRecords.js\";\n\nconst rootReducer = combineReducers({\n    modes: fetchModesReducer,\n    activeMode: activeModeReducer,\n    isGameStarted: isGameStartedReducer,\n    hoverRecords: hoverRecordsReducer\n});\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport store from \"./store/\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}